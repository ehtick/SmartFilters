var hcSmartFilter;(()=>{"use strict";var e={d:(t,r)=>{for(var i in r)e.o(r,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:r[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{SmartFilter:()=>n,SmartFilterCondition:()=>i,SmartFilterConditionType:()=>s,SmartFilterManager:()=>r,SmartFilterPropertyType:()=>o,getVersion:()=>a});class r{static _smartFilters=[];static initialize(e){r._viewer=e,r._smartFilters=[]}static addSmartFilter(e,t){r._smartFilters.push({filter:e,isProp:t})}static getSmartFilters(){return r._smartFilters}static getSmartFilterByName(e){for(let t=0;t<r._smartFilters.length;t++)if(r._smartFilters[t].filter.getName()==e)return r._smartFilters[t]}static getSmartFilterByID(e){for(let t=0;t<r._smartFilters.length;t++)if(r._smartFilters[t].filter._id==e)return r._smartFilters[t].filter}static getSmartFilterNum(){return r._smartFilters.length}static getSmartFilter(e){return r._smartFilters[e].filter}static getSmartFilterID(e){return r._smartFilters[e].filter._id}static getIsProp(e){return r._smartFilters[e].isProp}static removeSmartFilter(e){for(let t=0;t<r._smartFilters.length;t++)if(r._smartFilters[t].filter._id==e)return r._smartFilters.splice(t,1)}static updateSmartFilter(e,t){r._smartFilters[e].filter=t}static updateSmartFilterIsProp(e,t){for(let i=0;i<r._smartFilters.length;i++)r._smartFilters[i].filter._id==e&&(r._smartFilters[i].isProp=t)}static toJSON(){let e=[];for(let t=0;t<r._smartFilters.length;t++)e.push({filter:r._smartFilters[t].filter.toJSON(),isProp:r._smartFilters[t].isProp});return e}static fromJSON(e){r._smartFilters=[];for(let t=0;t<e.length;t++){let i=new n(r._viewer);i.fromJSON(e[t].filter),r.addSmartFilter(i,e[t].isProp)}return e}static async evaluateProperties(e){let t=[];for(let i=0;i<r._smartFilters.length;i++)if(r._smartFilters[i].isProp){let s=r._smartFilters[i].filter;if(await s.testOneNodeAgainstConditions(e)){let r=await s.findAllPropertiesOnNode(e),i=s.getName();""==i&&(i=s.generateString()),t.push({name:i,properties:r})}}return t}}class i{constructor(){this.and=!0,this.conditionType=s.contains,this.propertyType=o.nodeName,this.propertyName="",this.text="",this.childFilter=null,this.smartFilterID=null}toJSON(){if(this.propertyType==o.smartFilter&&!this.smartFitlerID){let e=r.getSmartFilterByName(this.text);e&&(this.smartFilterID=e.filter._id)}return{and:this.and,conditionType:this.conditionType,propertyType:this.propertyType,propertyName:JSON.parse(JSON.stringify(this.propertyName)),text:this.text,childFilter:this.childFilter,smartFilterID:this.smartFilterID}}fromJSON(e){this.and=e.and,this.conditionType=e.conditionType,this.propertyType=e.propertyType,this.propertyName=e.propertyName,this.text=e.text,this.childFilter=e.childFilter,this.smartFilterID=e.smartFilterID}setSmartFilterID(e){this.smartFitlerID=e}getSmartFilterID(){return this.smartFilterID}setAndOr(e){this.and=e}getAndOr(){return this.and}setConditionType(e){this.conditionType=e}getConditionType(){return this.conditionType}setPropertyName(e){this.propertyName=e}getPropertyName(){return this.propertyName}setPropertyType(e){this.propertyType=e}getPropertyType(){return this.propertyType}setText(e){this.text=e}getText(){return this.text}setChildFilter(e){this.childFilter=e}getChildFilter(){return this.childFilter}}const s={contains:0,exists:1,notExists:2,greaterOrEqual:3,lessOrEqual:4,equals:5,unequal:6},o={nodeName:0,nodeId:1,nodeChain:2,nodeType:3,nodeColor:4,relationship:5,property:6,smartFilter:7};class n{static _propertyHash=[];static _allPropertiesHash=[];static _containedInSpatialStructureHash=[];static _spaceBoundaryHash=[];static _modelHash=[];static convertEnumConditionToString(e){switch(e){case s.contains:return"contains";case s.exists:return"exists";case s.notExists:return"!exists";case s.greaterOrEqual:return">=";case s.lessOrEqual:return"<=";case s.equals:return"=";case s.unequal:return"≠"}}static convertStringConditionToEnum(e){switch(e){case"contains":return s.contains;case"exists":return s.exists;case"!exists":return s.notExists;case">=":return s.greaterOrEqual;case"<=":return s.lessOrEqual;case"=":return s.equals;case"≠":return s.unequal}}static convertStringPropertyTypeToEnum(e){if(e.indexOf("SmartFilter")>-1)return o.smartFilter;switch(e){case"Node Name":return o.nodeName;case"Nodeid":return o.nodeId;case"Node Chain":return o.nodeChain;case"Node Type":return o.nodeType;case"Node Color":return o.nodeColor;case"Rel:ContainedIn":case"Rel:SpaceBoundary":return o.relationship;case"Smart Filter":return o.smartFilter;default:return o.property}}static _getModelTreeIdsRecursive(e,t,r,i){t.push(i.model.getNodeProperties(e)),r.push(e);let s=i.model.getNodeChildren(e);for(let e=0;e<s.length;e++)n._getModelTreeIdsRecursive(s[e],t,r,i)}static addModel(e,t,r){for(let r=0;r<n._modelHash.length;r++)if(n._modelHash[r].id==e)return void(n._modelHash[r].nodeid=t);n._modelHash.push({id:e,nodeid:t,savedHash:r,ids:null,properties:null})}static _updateHashes(e,t,r,i){for(let s=0;s<r.length;s++){n._propertyHash[t[s]]=r[s];let o=e.model.getNodeLayerId(t[s]);null!=o&&i.size>1&&(null==n._propertyHash[t[s]]&&(n._propertyHash[t[s]]=[]),n._propertyHash[t[s]].LAYER=i.get(o));for(let e in r[s])n._allPropertiesHash[e]=[]}for(let e in n._propertyHash)for(let t in n._propertyHash[e])n._allPropertiesHash[t][n._propertyHash[e][t]]=!0}static parseSavedPropertyHash(e){let t=e.allprops,r=e.nodeprops,i=[],s=[];for(let e=0;e<r.length;e++){let o=r[e];s.push(o.i);let n={},a=o.p;for(let e=0;e<a.length;e+=2)n[t[a[e]].name]=t[a[e]].values[a[e+1]];i.push(n)}return{ids:s,props:i}}static exportPropertyHash(){let e=[],t=[],r=[];for(let t in n._allPropertiesHash){let i={name:t,values:Object.keys(n._allPropertiesHash[t])},s=[];for(let e=0;e<i.values.length;e++)s[i.values[e]]=e;i.ehash=s,e.push(i),r[t]=e.length-1}for(let i in n._propertyHash){let s=[];for(let t in n._propertyHash[i]){let o=e[r[t]];s.push(r[t],o.ehash[n._propertyHash[i][t]])}t.push({i,p:s})}for(let t=0;t<e.length;t++)e[t].ehash=void 0;return{allprops:e,nodeprops:t}}static async initialize(e){n._propertyHash=[],n._allPropertiesHash=[],n._containedInSpatialStructureHash=[],n._spaceBoundaryHash=[];let t=e.model.getLayers();if(0==n._modelHash.length){let r=[],i=[];n._getModelTreeIdsRecursive(e.model.getRootNode(),r,i,e);let s=await Promise.all(r);n._updateHashes(e,i,s,t)}else for(let r=0;r<n._modelHash.length;r++){let i=n._modelHash[r],s=[],o=null,a=e.model.getNodeIdOffset(i.nodeid);if(i.ids){for(let e=0;e<i.ids.length;e++)s.push(i.ids[e]+a);o=i.properties}else{let t=[];if(i.savedHash){let e=n.parseSavedPropertyHash(i.savedHash);o=e.props,s=e.ids}else n._getModelTreeIdsRecursive(i.nodeid,t,s,e),o=await Promise.all(t);i.properties=o,i.ids=[];for(let e=0;e<s.length;e++)i.ids.push(s[e]-a)}n._updateHashes(e,s,o,t)}}constructor(e,t){this._viewer=e,this._limitselectionlist=[],this._conditions=[],this._name="",this._id=this._generateGUID(),this._startnode=t||this._viewer.model.getRootNode()}updateConditions(e){this._conditions=e}setName(e){this._name=e,""==this._name&&(this._name=this.generateString())}getName(){return this._name}getNumConditions(){return this._conditions.length}getCondition(e){return this._conditions[e]}addCondition(e){this._conditions.push(e)}removeCondition(e){if(this._conditions.splice(e,1),this._conditions.length&&this._conditions[0].childFilter){let e=this._conditions[0].childFilter;this._conditions.splice(0,1);for(let t=0;t<e._conditions.length;t++)this._conditions.unshift(e._conditions[t])}}getAllProperties(){let e=[],t=!1;n._allPropertiesHash.TYPE&&(t=!0);for(let t in n._allPropertiesHash)"TYPE"!=t&&e.push(t);return e.sort(),t&&e.unshift("TYPE"),e.unshift("Smart Filter"),e.unshift("Rel:SpaceBoundary"),e.unshift("Rel:ContainedIn"),e.unshift("Node Color"),e.unshift("Node Type"),e.unshift("Node Chain"),e.unshift("Nodeid"),e.unshift("Node Name"),e}getAllOptionsForProperty(e){return n._allPropertiesHash[e]}fromJSON(e){this._conditions=[];for(let t=0;t<e.conditions.length;t++){let r=new i;r.fromJSON(e.conditions[t]),this._conditions.push(r)}for(let e=0;e<this._conditions.length;e++)if(this._conditions[e].childFilter){let t=new n(this._viewer,this._conditions[e].childFilter.startnode);t.fromJSON(this._conditions[e].childFilter),this._conditions[e].childFilter=t}this._name=e.name,e.id&&(this._id=e.id)}toJSON(){let e=[];for(let t=0;t<this._conditions.length;t++){let r=this._conditions[t].toJSON();this._conditions[t].childFilter&&(r.childFilter=this._conditions[t].childFilter.toJSON()),e.push(r)}return{conditions:e,name:this._name,id:this._id}}limitToNodes(e){this._limitselectionlist=[];for(let t=0;t<e.length;t++)this._limitselectionlist.push(e[t])}getStartNode(){return this._startnode}async apply(){let e=new Date,t=this._conditions,r=this._limitselectionlist;for(let e=0;e<t.length;e++)t[e].text=t[e].text.replace(/&quot;/g,'"');let i=[];if(this._nodeChainText="",0==r.length)this._startnode==this._viewer.model.getRootNode()?await this._gatherMatchingNodesRecursive(t,this._startnode,i,this._startnode,""):await this._gatherMatchingNodesRecursive(t,this._startnode,i,this._viewer.model.getNodeParent(this._startnode),"");else for(let e=0;e<r.length;e++)await this._gatherMatchingNodesRecursive(t,r[e],i,this._viewer.model.getNodeParent(r[e]),"");let s=new Date;return console.log("SmartFilter: "+(s-e)+"ms"),i}createChainText(e,t,r){let i=e,s=[];for(s.push(this._viewer.model.getNodeName(e));;){let e=this._viewer.model.getNodeParent(i);if(null==e||e==t)break;s.push(this._viewer.model.getNodeName(e)),i=e}let o="";for(let e=s.length-1-r;e>=0;e--)o+=e>0?s[e]+"->":s[e];return o}async testOneNodeAgainstConditions(e){let t=this._conditions;for(let e=0;e<t.length;e++)t[e].text=t[e].text.replace(/&quot;/g,'"');return await this._testNodeAgainstConditions(e,this._conditions,"")}async findAllPropertiesOnNode(e,t,r,i){let s,a,l;t?(s=t,a=r,l=i):(s=this._conditions,a=[],l=[]);for(let t=0;t<s.length;t++)if(s[t].childFilter)await this.findAllPropertiesOnNode(e,s[t].childFilter._conditions,a,l);else if(s[t].propertyType==o.property){let r=n._propertyHash[e];r[s[t].propertyName]&&!l[s[t].propertyName]&&(l[s[t].propertyName]=!0,a.push({name:s[t].propertyName,value:r[s[t].propertyName]}))}return a}generateString(){let e="";for(let t=0;t<this._conditions.length;t++)t>0&&(e+=" "+(this._conditions[t].and?"and":"or")+" "),this._conditions[t].childFilter?e+="("+this._conditions[t].childFilter.generateString()+") ":e+=this._conditions[t].propertyName+" "+n.convertEnumConditionToString(this._conditions[t].conditionType)+" "+this._conditions[t].text;return e=e.replace(/&quot;/g,'"'),e}async _checkSpaceBoundaryFilter(e,t){let r,i=this._viewer.model.getBimIdFromNode(e);if(n._spaceBoundaryHash[e]?r=n._spaceBoundaryHash[e]:(r=this._viewer.model.getBimIdRelatingElements(e,i,Communicator.RelationshipType.SpaceBoundary),n._spaceBoundaryHash[e]=r),r.length>0){let i=this._viewer.model.getNodeIdOffset(e);for(let e=0;e<r.length;e++)if(await this._checkFilter(parseInt(r[e])+i,t))return!0}return!1}async _checkContainedInFilter(e,t){let r,i=this._viewer.model.getBimIdFromNode(e);if(n._containedInSpatialStructureHash[e]?r=n._containedInSpatialStructureHash[e]:(r=this._viewer.model.getBimIdRelatingElements(e,i,Communicator.RelationshipType.ContainedInSpatialStructure),n._containedInSpatialStructureHash[e]=r),r.length>0){let i=this._viewer.model.getNodeIdOffset(e);for(let e=0;e<r.length;e++)if(await this._checkFilter(parseInt(r[e])+i,t))return!0}return!1}async _checkFilter(e,t,r){if(t.conditionType!=s.contains){if(t.conditionType==s.exists)return!(!n._propertyHash[e]||null==n._propertyHash[e][t.propertyName]);if(t.conditionType==s.notExists)return!(!n._propertyHash[e]||null!=n._propertyHash[e][t.propertyName]);let r;if(t.propertyType==o.nodeName)r=parseFloat(this._viewer.model.getNodeName(e));else if(t.propertyType==o.nodeId)r=e;else{let i;if(n._propertyHash[e]&&(i=n._propertyHash[e][t.propertyName]),null==i)return t.conditionType==s.unequal;r=parseFloat(i)}let i=parseFloat(t.text);if(isNaN(i)||isNaN(r))return!1;if(t.conditionType==s.greaterOrEqual){if(r>=i)return!0}else if(t.conditionType==s.lessOrEqual){if(r<=i)return!0}else if(t.conditionType==s.unequal){if(r!=i)return!0}else if(r==i)return!0;return!1}{let i=t.text.split(","),s="";if(t.propertyType==o.nodeName||t.propertyType==o.relationship)s=this._viewer.model.getNodeName(e);else if(t.propertyType==o.nodeChain)s=r||this.createChainText(e,this._viewer.model.getRootNode(),0);else if(t.propertyType==o.nodeType)s=Communicator.NodeType[this._viewer.model.getNodeType(e)];else if(t.propertyType==o.nodeColor)if(this._viewer.model.getNodeChildren(e).length>0)s="x";else{let t=await this._viewer.model.getNodesEffectiveFaceColor([e]);s=t.length>0?t[0].r+" "+t[0].g+" "+t[0].b:"x"}else s=t.propertyType==o.nodeId?e.toString():null==n._propertyHash[e]||null==n._propertyHash[e][t.propertyName]?void 0:n._propertyHash[e][t.propertyName];null==s&&(s="");let a=0,l=0,d=0,h=0,p=0;for(let e=0;e<i.length;e++){let r,n;if('"'==i[e][0]||'"'==i[e][1])if(r=!0,'"'==i[e][0])n=i[e].substring(1,i[e].length-1);else{let t=i[e][0];n=i[e].substring(2,i[e].length-1),n=t+n}else n=i[e],r=!1;if(t.propertyType==o.nodeId&&(r=!0),""==n||1==n.length&&("+"==n[0]||"-"==n[0]))return;"+"==n[0]?(l++,r?s.toLowerCase()==n.substring(1).toLowerCase()&&a++:-1!=s.toLowerCase().indexOf(n.substring(1).toLowerCase())&&a++):"-"==n[0]?(d++,r?s.toLowerCase()!=n.substring(1).toLowerCase()&&h++:-1==s.toLowerCase().indexOf(n.substring(1).toLowerCase())&&h++):r?s.toLowerCase()==n.toLowerCase()&&p++:-1!=s.toLowerCase().indexOf(n.toLowerCase())&&p++}return l==a&&d==h&&(p>0||a+h==i.length)}}async _testNodeAgainstConditions(e,t,i){let s=0,n=!1;t.length>1&&!t[1].and&&(n=!0);for(let a=0;a<t.length;a++){let l;if(t[a].propertyType==o.relationship)"Rel:SpaceBoundary"==t[a].propertyName?l=await this._checkSpaceBoundaryFilter(e,t[a]):"Rel:ContainedIn"==t[a].propertyName&&(l=await this._checkContainedInFilter(e,t[a]));else if(t[a].propertyType==o.smartFilter){if(!t[a].smartFilter)if(t[a].smartFilterID)t[a].smartFilter=r.getSmartFilterByID(t[a].smartFilterID);else{let e=r.getSmartFilterByName(t[a].text);t[a].smartFilterID=e.filter._id,t[a].smartFilter=e.filter}l=await this._testNodeAgainstConditions(e,t[a].smartFilter._conditions,i)}else l=t[a].childFilter?await this._testNodeAgainstConditions(e,t[a].childFilter._conditions,i):await this._checkFilter(e,t[a],i);if(0==l){if(!n)break}else s++}return!!(!n&&s==t.length||n&&s>0)}async _gatherMatchingNodesRecursive(e,t,r,i,s){let o=this._viewer.model.getNodeName(t);t!=i&&await this._testNodeAgainstConditions(t,e,s+o)&&r.push(t);let n=this._viewer.model.getNodeChildren(t);for(let t=0;t<n.length;t++)await this._gatherMatchingNodesRecursive(e,n[t],r,i,s+o);this._nodeChainText.slice(0,-o.length)}_generateGUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))}}function a(){return"1.0.3"}hcSmartFilter=t})();